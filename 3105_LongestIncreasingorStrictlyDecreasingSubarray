class Solution {
public:
    int longestMonotonicSubarray(vector<int>& nums) {
        int countinc=1,countdec=1,longest=1;
        for(int i =0;i<nums.size()-1;i++){
            int j = i+1;
                
                
                    if(nums[j]>nums[i]){
                        countinc++;
                        countdec=1;

                    }
                    else if(nums[j]<nums[i]){
                        countinc=1;
                        countdec++;
                    }
                
                
                
                    else if(nums[j]==nums[i]){
                        countdec=1;countinc=1;
                    }
                
                
                longest =max(longest,max(countinc,countdec));
        }
        return longest;
    }
};

// ðŸš€100% beginner friendly
Approach
used three variables, one to track if the subarray is increasing, one to check decreasing, one to store the max length of the required subarray.

Complexity
Time complexity:
O(n)